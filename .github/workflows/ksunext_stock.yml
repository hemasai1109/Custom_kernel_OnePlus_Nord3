# GitHub Actions Workflow: Build OnePlus Nord 3 Kernel with KSUNext + SUSFS Patches

name: Build OnePlus Nord 3 KSUNext

on:
  workflow_dispatch:
    inputs:
      FILE:
        type: string
        description: "Configuration file"
        required: true
        default: manifest_crom_n3
      BUILD_TIME:
        type: string
        description: "Custom build time (Enter F to use current time)"
        required: false
        default: "F"
      SUFFIX:
        type: string
        description: "Custom kernel suffix (leave empty for a random string)"
        required: false
        default: "DareDevil⚡"
      SUSFS_CI:
        type: choice
        description: "SUSFS module download method"
        required: true
        default: CI
        options:
          - CI
          - Release
          - NoN
      KSU_META:
        type: string
        description: "Branch name/Custom version identifier"
        required: false
        default: "ksunext-main/DareDevil⚡"
      FAST_BUILD:
        type: boolean
        description: "Enable fast build?"
        required: true
        default: true
      VFS:
        type: boolean
        description: "Enable manual hooks (VFS)?"
        required: true
        default: true
      KPM:
        type: boolean
        description: "Enable Kernel Patch Module (KPM)?"
        required: true
        default: true

jobs:
  build:
    name: Build ${{ github.event.inputs.FILE }} with KSUNext
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt update -qq
          sudo apt install -y build-essential curl git ccache libelf-dev flex bison libssl-dev libncurses-dev liblz4-tool zlib1g-dev libxml2-utils rsync unzip llvm lld

      - name: Initialize Repo and Sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/Luffy-456/SukiSU_Kernel_Nord3.git -m ${{ github.event.inputs.FILE }}.xml --depth=1
          repo sync -c -j$(nproc --all) --no-tags --no-clone-bundle --force-sync

      - name: Apply KSUNext
        run: |
          cd kernel_workspace/kernel-5.10
          META="${{ github.event.inputs.KSU_META }}"
          BRANCH_NAME="${META%%/*}"
          CUSTOM_TAG="${META#*/}"
          curl -LSs "https://raw.githubusercontent.com/KSUNext/KSUNext/main/kernel/setup.sh" | bash -s "$BRANCH_NAME"
          cd ./KernelSU
          KSU_API_VERSION=$(curl -fsSL "https://raw.githubusercontent.com/KSUNext/KSUNext/$BRANCH_NAME/kernel/Makefile" | \
            grep -m1 "KSU_VERSION_API :=" | awk -F'= ' '{print $2}' | tr -d '[:space:]')
          [[ -z "$KSU_API_VERSION" ]] && KSU_API_VERSION="3.1.7"
          echo "KSU_API_VERSION=$KSU_API_VERSION" >> $GITHUB_ENV
          KSU_VERSION_FULL="v$KSU_API_VERSION-$CUSTOM_TAG@$BRANCH_NAME"
          echo "KSU_VERSION_FULL=$KSU_VERSION_FULL" >> $GITHUB_ENV
          sed -i '/KSU_VERSION_API :=/d' kernel/Makefile
          sed -i '/KSU_VERSION_FULL :=/d' kernel/Makefile
          echo "KSU_VERSION_API := $KSU_API_VERSION" >> kernel/Makefile
          echo "KSU_VERSION_FULL := $KSU_VERSION_FULL" >> kernel/Makefile
          KSU_VERSION=$(expr $(git rev-list --count main 2>/dev/null || echo 13000) + 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

      - name: Apply SUSFS Patches
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel-5.10
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}.patch ./
          patch -p1 < 50_add_susfs_in_gki-${{ env.ANDROID_VERSION }}-${{ env.KERNEL_VERSION }}.patch || true

      - name: Build Kernel
        run: |
          cd kernel_workspace/
          export PATH="/usr/lib/ccache:$PATH"
          export CC="ccache clang"
          ./build/build.sh
          ccache -s

      - name: Package Kernel
        run: |
          git clone https://github.com/darklord4567/Anykernel3_AOSP_NORD3.git --depth=1
          cp kernel_workspace/out/android12-5.10/kernel-5.10/arch/arm64/boot/Image.gz Anykernel3_AOSP_NORD3/Image.gz

      - name: Upload Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_CROM_${{ env.KSUVER }}_${{ github.event.inputs.FILE }}_DareDevil⚡
          path: ./Anykernel3_AOSP_NORD3/*
